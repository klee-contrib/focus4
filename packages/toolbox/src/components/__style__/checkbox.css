:root {
    --checkbox-size: 18px;
    --checkbox-outline-size: 2px;
    --checkbox-state-size: 40px;
}

.checkbox {
    display: flex;
    align-items: center;
    position: relative;
    user-select: none;
    width: fit-content;
    cursor: pointer;
}

.checkbox--loading * {
    transition: none 0s ease 0s !important;
}

.input {
    opacity: 0;
    width: var(--checkbox-state-size);
    height: var(--checkbox-state-size);
    position: absolute;
    margin: 0;
    z-index: 1;
    pointer-events: none;
}

.state {
    display: block;
    position: relative;
    width: var(--checkbox-state-size);
    height: var(--checkbox-state-size);
    border-radius: 50%;
    transition: background-color var(--animation-duration) var(--animation-curve-default);
}

.outline {
    display: block;
    position: absolute;
    top: calc((var(--checkbox-state-size) - var(--checkbox-size)) / 2 + var(--checkbox-outline-size));
    left: calc((var(--checkbox-state-size) - var(--checkbox-size)) / 2 + var(--checkbox-outline-size));
    width: calc(var(--checkbox-size) - 2 * var(--checkbox-outline-size));
    height: calc(var(--checkbox-size) - 2 * var(--checkbox-outline-size));
    line-height: var(--checkbox-size);
    outline: var(--checkbox-outline-size) solid var(--input-outline-color);
    border-radius: 1%;
    transition:
        background-color var(--animation-duration) var(--animation-curve-default),
        outline-color var(--animation-duration) var(--animation-curve-default);
}

span.check {
    font-size: calc(var(--checkbox-size) - var(--checkbox-outline-size));
    font-weight: var(--font-weight-bold);
    margin: calc(var(--checkbox-outline-size) / -2);
    clip-path: inset(0 50% 0 50%);
}

.label {
    color: var(--input-text-color);
    margin: 0 4px;
    font-size: var(--input-text-font-size);
    line-height: var(--checkbox-state-size);
}

.checkbox--checked {
    & .outline {
        outline-color: var(--input-on-main-color);
        background-color: var(--input-on-main-color);
    }

    & span.check {
        color: var(--input-on-secondary-color);
        clip-path: inset(0 0 0 0);
        transition: clip-path var(--animation-duration) var(--animation-curve-default);
    }
}

.checkbox--disabled {
    cursor: auto;

    & .outline {
        outline-color: var(--input-disabled-color);
    }

    & .label {
        color: var(--input-disabled-color);
    }
}

.checkbox--checked.checkbox--disabled .outline {
    background-color: var(--input-disabled-color);
}

.checkbox:hover:not(.checkbox--disabled) .state {
    color: var(--input-state-color);
    background-color: var(--input-state-hover-color);
}

.checkbox--error:not(.checkbox--disabled):hover .state {
    color: var(--input-error-color);
    background-color: var(--input-error-hover-color);
}

.checkbox--error:not(.checkbox--disabled) {
    & .outline {
        outline-color: var(--input-error-color);
    }

    &.checkbox--checked .outline {
        background-color: var(--input-error-color);
    }
}

.input:focus + .state {
    animation-name: focus;
    animation-duration: var(--animation-duration);
    animation-timing-function: var(--animation-curve-focus-ring);
    outline: var(--focus-ring-width) solid var(--focus-ring-color);
}

.checkbox--error .input:focus + .state {
    outline-color: var(--focus-ring-error-color);
}

@keyframes focus {
    0% {
        outline-width: 0px;
    }
    50% {
        outline-width: calc(2 * var(--focus-ring-width));
    }
    100% {
        outline-width: var(--focus-ring-width);
    }
}
